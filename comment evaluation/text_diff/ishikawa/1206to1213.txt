--- ishikawa/20171206.txt	2018-06-21 13:43:28.019598600 +0900
+++ ishikawa/20171213.txt	2018-06-21 13:43:47.077316300 +0900
@@ -1,5 +1,5 @@
-ブレインストーミングにおける
-情報統合支援
+技術系チャットを利用したブレインストー
+ミングを対象とした情報統合
 
 
 学籍番号：
@@ -27,28 +27,9 @@
 する必要があり，複数の手段を利用して頻繁
 にコミュニケーションがおこなわれている．
 .
-開発者同士の交流やコミュニケーション能力の向上を目的と
-して，アイディアの創出を目的とした
-ブレインストーミング
-が利用
-されて
-いる．
-
-
-
-研究動機
-
-
-.
-ソフトウェア開発に関わった時に「なぜこの技術なのか？」
-「この人に実装を任せれば早く終わっていた」といったコ
-ミュニケーションの不足が原因となって
-いそう
-な事が多く
-あった．
-.
-円滑なコミュニケーションが出来ていれば，こういった問題
-を解決出来ていたのではないかと考えた．
+開発に関する情報が，個人でのメモや開発用ツールに蓄積さ
+れているものの，会話や議論まではプロジェクト全体に行き
+渡らないという問題がある．
 
 
 
@@ -223,29 +204,40 @@
 
 
 
-研究課題（１）
+研究動機
 
 
 .
-チャット上でおこなう議論・ブレインストーミングの場合，
-意見やアイディアが多く投稿されるために情報が埋もれる問
-題がある．
+ソフトウェア開発に関わった時に「なぜこの技術なのか？」
+「この人に実装を任せれば早く終わっていた」といったコ
+ミュニケーションの不足が原因となって
+いそう
+な事が多く
+あった．
 .
-情報の埋没を防ぐために何人かに分かれて議論などをおこ
-なった場合，出てきた意見をまとめるのに時間がかかるとい
-う統合面での問題がある．
+円滑なコミュニケーションが出来ていれば，こういった問題
+を解決出来ていたのではないかと考えた．
 
 
 
-研究課題（２）
+研究課題
 
 
-.
-参加者にアイディアや意見を求めるため，人によっては一切
-発話しないなど，人によって参加度合いに差が出る事がある．
-.
-誰も発言しない場合，アイディアの創出に繋がらないという
-悪循環が発生する場合がある．
+1.
+様々な手段で行われた会話・議論で生まれた情報をどの様
+な手法を用いて統合するか．
+2.
+発言・議論内容の関連度をどのように抽出するか．
+3.
+過去
+の
+良い意見・アイディア
+をどの様に現在
+の
+議論
+に
+統合
+するか．
 
 
 
@@ -253,19 +245,13 @@
 
 
 .
-チャット上でのブレインストーミングで出たアイディアや意見の統合
-を支援するシステムの提案．
-
-
-
-
+過去にあった良い意見やアイディアというもの自体
+を見つけや
+すく
+したい．
 .
-ソフトウェア
-開発の現場で，問題に近いテーマ設定のブレインストー
-ミングをおこない，出てきたアイディアをシステムで統合する．その
-情報を活用することで，問題の解決に繋がる
-のではない
-か．
+過去にあった良い意見やアイディアを見つけ，現在の議論に紐
+付けることで，新たな良い意見やアイディアの創出に繋げたい．
 
 
 
@@ -275,21 +261,25 @@
 
 
 .
-ブレインストーミングで出てきたアイディアや意見をタグで記
-録してもらう．
+ソフトウェア開発に関する議論やアイディアが出る場所として
+「
+技術系チャットでのブレインストーミング
+」を
+利用
+する．
 .
-アイディアや発言内容を
-自然言語
-処理を用いる事で，近いアイ
-ディアのものや意見を統合する．
+ブレインストーミング参加者に，チャット上で出てきたアイ
+ディアや意見をタグで記録してもらう．
+.
+ブレインストーミングで記録されたアイディアや意見をスコア
+化して抽出することで，議論やアイディアの統合を目指す．
 
 
 
 提案システム図
 
 
-発言やアイディア
-の内容を記録
+発言を記録
 
 
 議論内容
@@ -303,7 +293,27 @@
 共有
 
 
-参加者
+発言者
+
+
+口頭＋資料
+で
+
+
+アイディアなど
+
+
+アイディアに対する考え
+
+
+聞き手
+
+
+※
+資料＝ホワイトボードやパワーポイントなどの媒体
+
+
+ブレインストーミング
 
 
 議論タグ
@@ -313,15 +323,7 @@
 .
 タグ化した議論の分類
 .
-アイディアの統合
-
-
-チャット
-システム
-
-
-考え・アイディア
-を投稿
+発言の類似度の抽出
 
 
 
@@ -333,45 +335,32 @@
 
 
 書き手
-（チーム
-A
-）
 
 
-書き手
-（チーム
-B
-）
+話し手
 
 
 考えたアイディア
 や意見
 
 
-意見がない参加者
-
-
 .
-チームの参加者が必要
-だと感じた
-物
-を記録
+参加者が必要だと感じ
+た発言
+を
+タグで記録
 
 
 提案システム
 
 
 .
-テーマに関連する単語を推薦
-
+過去のアイディアや意
+見で関連度の高いものを
+提示
 
-ブレインストーミング
-終了時
 
-
-.
-チームで出たアイディ
-アや意見を統合して提示
+聞き手
 
 
 
@@ -386,7 +375,7 @@
 
 
 .
-出てきたアイディアをまとめるために時間がかかる．
+テーマが違う所からアイディアが再利用されることは無い．
 
 
 【
@@ -397,18 +386,20 @@
 
 
 .
-記録されたアイディアや意見の統合がシステムで進むことで，
-統合する部分にかかる時間などのコストが減る．
+過去のブレインストーミングの内容が比較される事で，アイ
+ディアが再利用される可能性がある．
 .
-過去の似た様なテーマの
-BS
-に関するデータがあれば，内容を比
-較する事で問題解決に繋がる様なアイディアを提案する事も可能
-になる．
+過去の意見と統合することで，その場での議論では発見出来な
+かった考えやアイディアの導出に繋げられる．
+
+
+
+実装
 
 
 
 実装（１）
+発言の記録
 
 
 .
@@ -569,6 +560,41 @@
 実装（２）
 
 
+発言やアイディア
+の内容を記録
+
+
+議論内容
+
+
+データベース
+
+
+発言者
+
+
+議論タグ
+データベース
+
+
+.
+タグ化した議論の分類
+.
+発言の類似度の抽出
+
+
+チャット
+システム
+
+
+考え・アイディア
+を投稿
+
+
+
+実装（３）
+
+
 記録用ページ
 
 
@@ -579,29 +605,33 @@
 
 
 
-実装（３）
+実装（４）
 
 
 .
-発言の類似度を抽出するプログラムの
-作成
+発言
+の類似度を
+抽出
+する機能の作成
 .
 コーパスに存在しない語は特徴ベクトルを
 0
-とした
-.
-類似度抽出をする際には記録者のタグを用いてラベル付けし，
-そのラベルの中で比較する
+と
+する
+．
 .
-コーパスは
-Web
-上で公開されているデータを，特徴ベクトルの算出には
+学習済みモデルは
+fastText
+と呼ばれる
 Word2Vec
-を利用した
+を応用した技術を
+利用して作成されたものを利用した．
 
 
-①プロトタイプシステム
-で発言を記録
+①発言
+を
+記録
+（実装（１））
 
 
 ②
@@ -609,19 +639,23 @@
 による分かち書き
 
 
-を利用した名詞・動詞・形
-容詞・感動詞の抽出
+を利用した名詞・動詞・形容詞の
+抽出（ストップワードの除去）
 
 
 ③
 Wikipedia
 コーパス
 を利用した
-特徴ベクトル算出
+fastText
+による学
+習済みモデルを
+用いた特徴ベクトル算出
 
 
 ④
-コサイン類似度による
+平均化した特徴ベクトルを
+用いたコサイン類似度による
 2
 文書間の類似度抽出
 
@@ -693,45 +727,170 @@
 
 
 
+fastText
+
+
+.
+Word2Vec
+と同様に単語の分散表現を獲得可能
+.
+Word2Vec
+では出来なかった活用形の考慮を可能にしている
+
+
+例）
+Word2Vec
+では「
+go
+」「
+goes
+」「
+going
+」は人間的には近いがモデル的に
+は別の単語として認識
+
+
+fastText
+では単語を構成する文字のまとまり（
+sub word
+）を考慮すること
+で活用形で変化しない基幹部分の表現を共有可能（「
+go
+」と「
+goes
+」の
+go
+は同じとして精度を高められる）
+
+
+.
+今回は
+Wikipedia
+のテキストコーパスを
+fastText
+を用いて学習された公
+開モデルを利用した
+
+
+
+特徴ベクトルの生成
+
+
+1.
+Wikipedia
+にある
+34
+万単語を
+Skip
+-
+gram
+でモデル化すること
+で，特徴ベクトルを生成する
+Skip
+-
+gram
+：単語の周辺にどの
+単語が登場するかの確率でモデル化する手法
+2.
+Wikipedia
+にある約
+34
+万単語が
+300
+次元のベクトルで示された
+学習済みモデルを読み込む
+3.
+用意
+した発言セットを分かち書きし，ストップワードを除去
+した上で学習済みモデルを利用して単語の特徴ベクトルを抽
+出する
+4.
+発言文章に登場する単語の特徴ベクトルの平均を計算
+5.
+平均化された
+2
+つの
+特徴ベクトルをコサイン類似度を利用して
+類似度を示す
+
+
+
 実験
 
 
 
 実験
-1
+1 
 概要
 
 
 .
-実際にチャット上でおこなわれている発言から，類似度を抽出
-し，「この発言とこの発言は似ていて，この発言と発言は似てい
-ない」と分類出来るのかを検証する．
+ソフトウェア開発のブレインストーミングで登場しそうな
+発言
+とそれに応答
+する発言を組み合わせた
+発言セット
+を用いて類似度を抽出する．
+.
+発言
+：
+Slack
+上に利用者が投稿した
+1
+文章のこと．
+.
+発言セット
+：
+A
+が何かを発した事に対する
+B
+の応答をあわせたもの．
+
+
+例）
+A
+『
+新しい機能ですがなんかありますかね？
+』
+B
+『
+うーん、新しい機能よりも今ある機能で改善したいのがあります。
+』
+
+
+A
+と
+B
+の発言セット
+『
+新しい機能ですがなんかありますかね？
+うーん
+、新しい機能よりも今ある
+機能で改善したいのがあります。
+』
 
 
 
 実験
-1
+1 
 目的
 
 
 .
-システムをブレインストーミングで利用してもらう前に，実際
-に示すことが出来るのかの確認を兼ねる．
+ブレインストーミングで生まれるアイディアや考えが含まれる
+発言同士の類似度を示す事が出来るのかを確認する．
 
 
 
 実験
-1
+1 
 手順
 
 
 1.
-実験に利用する発言データを用意する（今回は手動でラベル
-付けした複数の発言を利用）
+実験に利用する発言セットを用意する
 2.
-2
-つの
-発言を比較し類似度がどう出てくるかを示す
+発言セット同士を比較し類似度がどう出てくるかを示す
 3.
 類似度が示せたとして，どうしきい値を設定すればいいかを
 考察する
@@ -739,38 +898,37 @@
 
 
 実験
-1
+1 
 結果
 
 
 
 実験
-2
+2 
 概要
 
 
 .
-プロトタイプシステムを利用した
-2
-チームによるチャット上での
-ブレインストーミングと，何も利用しない
-2
-チームによるチャッ
-ト上によるブレインストーミングをしてもらい，アイディアの統
-合（結論づけ）にかかった時間を計測する．
+複数名によるチャット上での
+ブレインストーミング
+を実施し，
+必要だと感じた発言を
+プロトタイプ
+システムを通じて記録しても
+らう．そして，記録されたアイディアや議論をスコア化して比較
+する．
 
 
 
 実験
-2
+2 
 目的
 
 
 .
-ソフトウェア開発時に利用するブレインストーミングの場合は，
-問題解決手法として用いられているが，出てきたアイディアの統
-合（まとめ）に時間がかかる問題がある．その問題を解決出来る
-可能性があるのかを確かめる．
+スコアを用意して，ブレインストーミングで生まれたアイディ
+アや議論の類似度をランキング的に示せるか（統合できるか）を
+見る．
 
 
 
@@ -780,46 +938,50 @@
 
 
 1.
-アイディアを出しやすいとされている
-4
-人のチームを
-4
-つ作成
-（
-ABCD
-とする）
+評価パラメータを用意し，パラメータを利用したスコア算出
+の式を用意する
 2.
-ソフトウェア開発に関連するブレインストーミングのテーマを設
-定し，チャット上で
-30
-分程度のブレインストーミングをしてもら
-う
+記録
+された発言セットをその式を利用して評価する
 3.
-テーマに対する結論をチャット上で出す段階に移行する
-4.
-A
-・
-B
-チームでは，プロトタイプシステムに集約されたアイディア
-や意見を利用して統合し，結論を出してもらう
-5.
-C
-・
-D
-チームでは，そのままアイディアや意見を統合し結論を出
-してもらう
-6.
-結論が出るまでにかかった時間，実際に統合に利用された発話数
-（
-A
-・
-B
-ならシステムに記録された数，
-C
-・
-D
-なら全発言数），生
-まれたアイディア数を比較する
+評価された発言セットのランキング結果を考察する
+
+
+
+実験
+2 
+評価式
+
+
+以下の評価パラメータを用いてブレインストーミングの評価付け
+をおこなう．
+.
+初期のアイディア数
+.
+発言数
+.
+チャット以外（オンラインホワイトボードなど）を利用したか
+.
+解決
+方法の導出（導出にいたった経緯で細分化）
+.
+全員一致でテーマに対する答えが出た場合
+.
+誰かの反対や疑問がありながらも答えが出た場合
+.
+全員反対な答えなどの中からあいにく見つけてきた場合
+.
+答えが見つからなかった場合
+
+
+
+
+
+
+
+実験
+2 
+結果
 
 
 
@@ -828,14 +990,12 @@
 
 
 .
-発話を促す仕組みの追加
-.
-Web
-側と類似度抽出の連携
+様々な手段での議論・会話への対応
 .
-実験データの収集
+スコアにより分類された発言データを用いた
+コーパスの作成による自動分類
 .
-普通の対話への適応
+ブレストの実施数と良いプロダクトの相関実験
 
 
 
