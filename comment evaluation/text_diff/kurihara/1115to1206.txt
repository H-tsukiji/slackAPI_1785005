--- kurihara/20171115.txt	2018-06-21 13:51:23.202771200 +0900
+++ kurihara/20171206.txt	2018-06-21 13:52:16.342307500 +0900
@@ -207,6 +207,13 @@
 .
 プログラミング開発時においていくつかの手法が存在した時，
 それらをよく吟味してから比較する必要があり、時間がかかる．
+.
+例えば
+JavaScript
+での
+非同期通信での情報取得は方法が複数ある．
+
+
 
 
 
@@ -219,6 +226,10 @@
 PC
 環境下での設計時の負担を軽減するよ
 うなエディタ及びシステムを提案する．
+.
+プログラミングにおいて「ある課題を成し遂げたい」ときに幾
+つかの手法があったときに，それぞれを吟味する必要があり，そ
+の検索推薦をサポート
 
 
 .
@@ -231,7 +242,7 @@
 
 
 
-本研究のアプローチ
+アプローチ
 -
 UI
 
@@ -334,18 +345,8 @@
 （ソースコードのコメントや記事中の解説）が含まれている．
 
 
-.
-類似研究
-†1
-ではデータセット
-†2
-と
-GETA
-と呼ばれる汎用連想計算
-エンジンを利用して類似ソースファイルを検索していた．
 
 
-本研究の
 アプローチ
 .
 検索
@@ -379,39 +380,53 @@
 
 
 
-評価方法
+アプローチ
+.
+検索
+(2)
 
 
-1.
-時間計測
 .
-いくつかの課題を用意し，
-通常時のように
-PC
-でプログラミングした
-ときと，タブレットを活用して設計した後プログラミングをしたとき
-の時間を測る．
+検索のクエリには単純なテキストによる検索だけではなく，ブ
+ロックの前後のつながりをコンテキストとして利用する
 .
-課題の達成をどう定義するか考えている．
+連続
+した
+ソースコードの
+断片があったらそれを優先的に推薦する
+.
+プログラミングのロジック（例えばファイルが
+open
+されたらいずれ
+close
+されることを予測した推薦）を利用する
 
 
-2.
-評価項目を用意して，アンケートをとり，有用性を評価する．
-.
-有効度
-，効率，満足度
-.
-ISO9241
--
-11:1998
-のユーザビリティの定義を元に設定
 
 
+
+評価方法
+
+
+.
+クロールしたソースコードの検索の性能を評価する．
+.
+ソースコード
+の推薦がよりモダンであるかどうかを基準とし，予め意
+図したソースコードが上位にくるかどうかで判断する．
+.
+例えば
+JavaScript
+では進化が早く，一般的な検索
+(Google
+など
+)
+では古い情報が出てく
+ることがしばしばある．
 
 
 
 
-※
 
 
 
@@ -477,14 +492,7 @@
 .
 データセットを効率よく集めていく方法
 .
-具体的な実験
-内容の設定
-.
-時間計測機能の実装
-.
 実験
 
 
-
-
 
