ブレインストーミングにおける
情報統合支援


学籍番号：
1421030
氏名：石川
俊明


指導教員：鷹野孝
典
准教授


1



研究背景


.
ソフトウェア開発では，設計や実装，技術に関する情報共
有・意見交換
を
する必要があり，複数の手段を利用して頻繁
にコミュニケーションがおこなわれている．
.
開発者同士の交流やコミュニケーション能力の向上を目的と
して，アイディアの創出を目的とした
ブレインストーミング
が利用
されて
いる．



研究動機


.
ソフトウェア開発に関わった時に「なぜこの技術なのか？」
「この人に実装を任せれば早く終わっていた」といったコ
ミュニケーションの不足が原因となって
いそう
な事が多く
あった．
.
円滑なコミュニケーションが出来ていれば，こういった問題
を解決出来ていたのではないかと考えた．



関連研究（１）


【
チャット・議論支援に関する研究
】
.
『
リアルタイム
なコミュニケーション行為であるチャットへの意味タグ付加
と
電子
ゼミナールへの
適用
』
（
2006,
情報
処理学会論文誌
）
.
発言
に
意味タグを付加した上でやり取りする機能を含むチャットシステムの提案


.
『
知識活動支援システムによる会議コンテンツ間の関連性の獲得とその応用
』
（
2010,
情報処理学会
全国大会講演論文集）
.
対面式会議を総括的に支援する知識活動システムの開発


.
『
Chatplexer
：チャットを併用する口頭発表における発表者のための重要発言選択支援の試
み
』
(
2012,
情報
処理学会論文誌
)
.
口頭
発表をした際の聴衆のチャットフィードバックから重要な発言の発見を支援するシス
テムの提案





関連研究（２）


【
議論
・
議論参加者の分類
】


.
『
参加者の議論能力と役割を考慮したオンライン議論の分析
』
（
2013,
人工知能学会
全国大会論文集
）
.
掲示板での議論から専門性やコミュニケーション能力を推定


.
『
係り受け構造を用いた
Web
議論掲示板における投稿への自動分類
』
（
2016,
電子情報通信学会
技術研究報告）
.
議論
に
おける
6
種類の役割を利用し、オンライン議論の分析


.
『
議論マイニングによる議論掲示板利用者の能力推定
』
（
2017,
情報処理学会
全国大会講演論文集
）
.
係り受け
構造と機械学習アルゴリズムによる分類・学習で議論理解を支援





関連研究（３）


【
ブレインストーミング
】
.
『
あいづち機能を用いた分散ブレインストーミング支援システム
』
（２０１０
,
情報処
理学会
情報処理学会論文誌）
.
非対面型ブレインストーミングにおける相槌機能を利用したアイディア創出の提案


.
『
ブレインストーミング
における発話の可視化の影響
に関する
探索的な
研究
』
（
2016,
人工知能学会
知識流通ネットワーク研究会
)
.
発話情報や発話数を表示する事で参加者の発言を促すシステムの提案


.
『
なるほど
ボタン：褒める効果音ボタンを用いたブレインストーミング支援システム
の
検討
』
(2016,
情報処理学会
エンターテイメントコンピューティング研究会
)
.
物理
ボタンと効果音によるブレインストーミングの支援システムの考案





研究課題（１）


.
チャット上でおこなう議論・ブレインストーミングの場合，
意見やアイディアが多く投稿されるために情報が埋もれる問
題がある．
.
情報の埋没を防ぐために何人かに分かれて議論などをおこ
なった場合，出てきた意見をまとめるのに時間がかかるとい
う統合面での問題がある．



研究課題（２）


.
参加者にアイディアや意見を求めるため，人によっては一切
発話しないなど，人によって参加度合いに差が出る事がある．
.
誰も発言しない場合，アイディアの創出に繋がらないという
悪循環が発生する場合がある．



研究目的


.
チャット上でのブレインストーミングで出たアイディアや意見の統合
を支援するシステムの提案．




.
ソフトウェア
開発の現場で，問題に近いテーマ設定のブレインストー
ミングをおこない，出てきたアイディアをシステムで統合する．その
情報を活用することで，問題の解決に繋がる
のではない
か．





研究のアプローチ


.
ブレインストーミングで出てきたアイディアや意見をタグで記
録してもらう．
.
アイディアや発言内容を
自然言語
処理を用いる事で，近いアイ
ディアのものや意見を統合する．



提案システム図


発言やアイディア
の内容を記録


議論内容


データベース


記録された情報
をオンラインで
共有


参加者


議論タグ
データベース


.
タグ化した議論の分類
.
アイディアの統合


チャット
システム


考え・アイディア
を投稿



提案システムの流れ


考えたアイディア
や意見


書き手
（チーム
A
）


書き手
（チーム
B
）


考えたアイディア
や意見


意見がない参加者


.
チームの参加者が必要
だと感じた
物
を記録


提案システム


.
テーマに関連する単語を推薦


ブレインストーミング
終了時


.
チームで出たアイディ
アや意見を統合して提示



従来方式との比較


【
対面型
BS
の場合
】


.
出てきたアイディアをまとめるために時間がかかる．


【
非対面
BS
と本提案方式を利用した特徴
】


.
記録されたアイディアや意見の統合がシステムで進むことで，
統合する部分にかかる時間などのコストが減る．
.
過去の似た様なテーマの
BS
に関するデータがあれば，内容を比
較する事で問題解決に繋がる様なアイディアを提案する事も可能
になる．



実装（１）


.
Slack
の
1
発言に対してタグを付けて記録するためのデータベー
スとプロトタイプシステムの作成


No


column
name


内容


1


id


ユ
―
ザー
ID


2


name


ユーザー名


3


password_digest


パスワード




No


column
name


内容


1


id


タグ
ID


2


name


タグ名




users table


tags table


documents table


No


column
name


内容


1


id


発言
ID


2


author_name


発言者名


3


desc


発言内容


4


source


発言元


5


said_time


発言時間




.
中間テーブルを作成し，誰がデー
タを追加したか、発言にどんなタ
グが付けられたかを紐付ける



実装（２）


記録用ページ


確認用ページ


記録一覧ページ



実装（３）


.
発言の類似度を抽出するプログラムの
作成
.
コーパスに存在しない語は特徴ベクトルを
0
とした
.
類似度抽出をする際には記録者のタグを用いてラベル付けし，
そのラベルの中で比較する
.
コーパスは
Web
上で公開されているデータを，特徴ベクトルの算出には
Word2Vec
を利用した


①プロトタイプシステム
で発言を記録


②
mecab
による分かち書き


を利用した名詞・動詞・形
容詞・感動詞の抽出


③
Wikipedia
コーパス
を利用した
特徴ベクトル算出


④
コサイン類似度による
2
文書間の類似度抽出



Word2Vec


.
単語をベクトル（数値配列）で表現する技術のこと
.
距離
が
近い単語は意味が似ていて、遠いと似ていない




男性


女性


おじ


おば


王


王妃


王


王妃


男性


女性


例
1)
王
.
男性
= 
権力のある人


権力のある人＋女性＝王妃


例
2)
(
良い
+ 
最高
)/2 = 
より良い



実験



実験
1
概要


.
実際にチャット上でおこなわれている発言から，類似度を抽出
し，「この発言とこの発言は似ていて，この発言と発言は似てい
ない」と分類出来るのかを検証する．



実験
1
目的


.
システムをブレインストーミングで利用してもらう前に，実際
に示すことが出来るのかの確認を兼ねる．



実験
1
手順


1.
実験に利用する発言データを用意する（今回は手動でラベル
付けした複数の発言を利用）
2.
2
つの
発言を比較し類似度がどう出てくるかを示す
3.
類似度が示せたとして，どうしきい値を設定すればいいかを
考察する



実験
1
結果



実験
2
概要


.
プロトタイプシステムを利用した
2
チームによるチャット上での
ブレインストーミングと，何も利用しない
2
チームによるチャッ
ト上によるブレインストーミングをしてもらい，アイディアの統
合（結論づけ）にかかった時間を計測する．



実験
2
目的


.
ソフトウェア開発時に利用するブレインストーミングの場合は，
問題解決手法として用いられているが，出てきたアイディアの統
合（まとめ）に時間がかかる問題がある．その問題を解決出来る
可能性があるのかを確かめる．



実験
2
手順


1.
アイディアを出しやすいとされている
4
人のチームを
4
つ作成
（
ABCD
とする）
2.
ソフトウェア開発に関連するブレインストーミングのテーマを設
定し，チャット上で
30
分程度のブレインストーミングをしてもら
う
3.
テーマに対する結論をチャット上で出す段階に移行する
4.
A
・
B
チームでは，プロトタイプシステムに集約されたアイディア
や意見を利用して統合し，結論を出してもらう
5.
C
・
D
チームでは，そのままアイディアや意見を統合し結論を出
してもらう
6.
結論が出るまでにかかった時間，実際に統合に利用された発話数
（
A
・
B
ならシステムに記録された数，
C
・
D
なら全発言数），生
まれたアイディア数を比較する



今後
の課題


.
発話を促す仕組みの追加
.
Web
側と類似度抽出の連携
.
実験データの収集
.
普通の対話への適応





