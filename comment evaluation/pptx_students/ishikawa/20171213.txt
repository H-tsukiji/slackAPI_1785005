技術系チャットを利用したブレインストー
ミングを対象とした情報統合


学籍番号：
1421030
氏名：石川
俊明


指導教員：鷹野孝
典
准教授


1



研究背景


.
ソフトウェア開発では，設計や実装，技術に関する情報共
有・意見交換
を
する必要があり，複数の手段を利用して頻繁
にコミュニケーションがおこなわれている．
.
開発に関する情報が，個人でのメモや開発用ツールに蓄積さ
れているものの，会話や議論まではプロジェクト全体に行き
渡らないという問題がある．



関連研究（１）


【
チャット・議論支援に関する研究
】
.
『
リアルタイム
なコミュニケーション行為であるチャットへの意味タグ付加
と
電子
ゼミナールへの
適用
』
（
2006,
情報
処理学会論文誌
）
.
発言
に
意味タグを付加した上でやり取りする機能を含むチャットシステムの提案


.
『
知識活動支援システムによる会議コンテンツ間の関連性の獲得とその応用
』
（
2010,
情報処理学会
全国大会講演論文集）
.
対面式会議を総括的に支援する知識活動システムの開発


.
『
Chatplexer
：チャットを併用する口頭発表における発表者のための重要発言選択支援の試
み
』
(
2012,
情報
処理学会論文誌
)
.
口頭
発表をした際の聴衆のチャットフィードバックから重要な発言の発見を支援するシス
テムの提案





関連研究（２）


【
議論
・
議論参加者の分類
】


.
『
参加者の議論能力と役割を考慮したオンライン議論の分析
』
（
2013,
人工知能学会
全国大会論文集
）
.
掲示板での議論から専門性やコミュニケーション能力を推定


.
『
係り受け構造を用いた
Web
議論掲示板における投稿への自動分類
』
（
2016,
電子情報通信学会
技術研究報告）
.
議論
に
おける
6
種類の役割を利用し、オンライン議論の分析


.
『
議論マイニングによる議論掲示板利用者の能力推定
』
（
2017,
情報処理学会
全国大会講演論文集
）
.
係り受け
構造と機械学習アルゴリズムによる分類・学習で議論理解を支援





関連研究（３）


【
ブレインストーミング
】
.
『
あいづち機能を用いた分散ブレインストーミング支援システム
』
（２０１０
,
情報処
理学会
情報処理学会論文誌）
.
非対面型ブレインストーミングにおける相槌機能を利用したアイディア創出の提案


.
『
ブレインストーミング
における発話の可視化の影響
に関する
探索的な
研究
』
（
2016,
人工知能学会
知識流通ネットワーク研究会
)
.
発話情報や発話数を表示する事で参加者の発言を促すシステムの提案


.
『
なるほど
ボタン：褒める効果音ボタンを用いたブレインストーミング支援システム
の
検討
』
(2016,
情報処理学会
エンターテイメントコンピューティング研究会
)
.
物理
ボタンと効果音によるブレインストーミングの支援システムの考案





研究動機


.
ソフトウェア開発に関わった時に「なぜこの技術なのか？」
「この人に実装を任せれば早く終わっていた」といったコ
ミュニケーションの不足が原因となって
いそう
な事が多く
あった．
.
円滑なコミュニケーションが出来ていれば，こういった問題
を解決出来ていたのではないかと考えた．



研究課題


1.
様々な手段で行われた会話・議論で生まれた情報をどの様
な手法を用いて統合するか．
2.
発言・議論内容の関連度をどのように抽出するか．
3.
過去
の
良い意見・アイディア
をどの様に現在
の
議論
に
統合
するか．



研究目的


.
過去にあった良い意見やアイディアというもの自体
を見つけや
すく
したい．
.
過去にあった良い意見やアイディアを見つけ，現在の議論に紐
付けることで，新たな良い意見やアイディアの創出に繋げたい．





研究のアプローチ


.
ソフトウェア開発に関する議論やアイディアが出る場所として
「
技術系チャットでのブレインストーミング
」を
利用
する．
.
ブレインストーミング参加者に，チャット上で出てきたアイ
ディアや意見をタグで記録してもらう．
.
ブレインストーミングで記録されたアイディアや意見をスコア
化して抽出することで，議論やアイディアの統合を目指す．



提案システム図


発言を記録


議論内容


データベース


記録された情報
をオンラインで
共有


発言者


口頭＋資料
で


アイディアなど


アイディアに対する考え


聞き手


※
資料＝ホワイトボードやパワーポイントなどの媒体


ブレインストーミング


議論タグ
データベース


.
タグ化した議論の分類
.
発言の類似度の抽出



提案システムの流れ


考えたアイディア
や意見


書き手


話し手


考えたアイディア
や意見


.
参加者が必要だと感じ
た発言
を
タグで記録


提案システム


.
過去のアイディアや意
見で関連度の高いものを
提示


聞き手



従来方式との比較


【
対面型
BS
の場合
】


.
テーマが違う所からアイディアが再利用されることは無い．


【
非対面
BS
と本提案方式を利用した特徴
】


.
過去のブレインストーミングの内容が比較される事で，アイ
ディアが再利用される可能性がある．
.
過去の意見と統合することで，その場での議論では発見出来な
かった考えやアイディアの導出に繋げられる．



実装



実装（１）
発言の記録


.
Slack
の
1
発言に対してタグを付けて記録するためのデータベー
スとプロトタイプシステムの作成


No


column
name


内容


1


id


ユ
―
ザー
ID


2


name


ユーザー名


3


password_digest


パスワード




No


column
name


内容


1


id


タグ
ID


2


name


タグ名




users table


tags table


documents table


No


column
name


内容


1


id


発言
ID


2


author_name


発言者名


3


desc


発言内容


4


source


発言元


5


said_time


発言時間




.
中間テーブルを作成し，誰がデー
タを追加したか、発言にどんなタ
グが付けられたかを紐付ける



実装（２）


発言やアイディア
の内容を記録


議論内容


データベース


発言者


議論タグ
データベース


.
タグ化した議論の分類
.
発言の類似度の抽出


チャット
システム


考え・アイディア
を投稿



実装（３）


記録用ページ


確認用ページ


記録一覧ページ



実装（４）


.
発言
の類似度を
抽出
する機能の作成
.
コーパスに存在しない語は特徴ベクトルを
0
と
する
．
.
学習済みモデルは
fastText
と呼ばれる
Word2Vec
を応用した技術を
利用して作成されたものを利用した．


①発言
を
記録
（実装（１））


②
mecab
による分かち書き


を利用した名詞・動詞・形容詞の
抽出（ストップワードの除去）


③
Wikipedia
コーパス
を利用した
fastText
による学
習済みモデルを
用いた特徴ベクトル算出


④
平均化した特徴ベクトルを
用いたコサイン類似度による
2
文書間の類似度抽出



Word2Vec


.
単語をベクトル（数値配列）で表現する技術のこと
.
距離
が
近い単語は意味が似ていて、遠いと似ていない




男性


女性


おじ


おば


王


王妃


王


王妃


男性


女性


例
1)
王
.
男性
= 
権力のある人


権力のある人＋女性＝王妃


例
2)
(
良い
+ 
最高
)/2 = 
より良い



fastText


.
Word2Vec
と同様に単語の分散表現を獲得可能
.
Word2Vec
では出来なかった活用形の考慮を可能にしている


例）
Word2Vec
では「
go
」「
goes
」「
going
」は人間的には近いがモデル的に
は別の単語として認識


fastText
では単語を構成する文字のまとまり（
sub word
）を考慮すること
で活用形で変化しない基幹部分の表現を共有可能（「
go
」と「
goes
」の
go
は同じとして精度を高められる）


.
今回は
Wikipedia
のテキストコーパスを
fastText
を用いて学習された公
開モデルを利用した



特徴ベクトルの生成


1.
Wikipedia
にある
34
万単語を
Skip
-
gram
でモデル化すること
で，特徴ベクトルを生成する
Skip
-
gram
：単語の周辺にどの
単語が登場するかの確率でモデル化する手法
2.
Wikipedia
にある約
34
万単語が
300
次元のベクトルで示された
学習済みモデルを読み込む
3.
用意
した発言セットを分かち書きし，ストップワードを除去
した上で学習済みモデルを利用して単語の特徴ベクトルを抽
出する
4.
発言文章に登場する単語の特徴ベクトルの平均を計算
5.
平均化された
2
つの
特徴ベクトルをコサイン類似度を利用して
類似度を示す



実験



実験
1 
概要


.
ソフトウェア開発のブレインストーミングで登場しそうな
発言
とそれに応答
する発言を組み合わせた
発言セット
を用いて類似度を抽出する．
.
発言
：
Slack
上に利用者が投稿した
1
文章のこと．
.
発言セット
：
A
が何かを発した事に対する
B
の応答をあわせたもの．


例）
A
『
新しい機能ですがなんかありますかね？
』
B
『
うーん、新しい機能よりも今ある機能で改善したいのがあります。
』


A
と
B
の発言セット
『
新しい機能ですがなんかありますかね？
うーん
、新しい機能よりも今ある
機能で改善したいのがあります。
』



実験
1 
目的


.
ブレインストーミングで生まれるアイディアや考えが含まれる
発言同士の類似度を示す事が出来るのかを確認する．



実験
1 
手順


1.
実験に利用する発言セットを用意する
2.
発言セット同士を比較し類似度がどう出てくるかを示す
3.
類似度が示せたとして，どうしきい値を設定すればいいかを
考察する



実験
1 
結果



実験
2 
概要


.
複数名によるチャット上での
ブレインストーミング
を実施し，
必要だと感じた発言を
プロトタイプ
システムを通じて記録しても
らう．そして，記録されたアイディアや議論をスコア化して比較
する．



実験
2 
目的


.
スコアを用意して，ブレインストーミングで生まれたアイディ
アや議論の類似度をランキング的に示せるか（統合できるか）を
見る．



実験
2
手順


1.
評価パラメータを用意し，パラメータを利用したスコア算出
の式を用意する
2.
記録
された発言セットをその式を利用して評価する
3.
評価された発言セットのランキング結果を考察する



実験
2 
評価式


以下の評価パラメータを用いてブレインストーミングの評価付け
をおこなう．
.
初期のアイディア数
.
発言数
.
チャット以外（オンラインホワイトボードなど）を利用したか
.
解決
方法の導出（導出にいたった経緯で細分化）
.
全員一致でテーマに対する答えが出た場合
.
誰かの反対や疑問がありながらも答えが出た場合
.
全員反対な答えなどの中からあいにく見つけてきた場合
.
答えが見つからなかった場合







実験
2 
結果



今後
の課題


.
様々な手段での議論・会話への対応
.
スコアにより分類された発言データを用いた
コーパスの作成による自動分類
.
ブレストの実施数と良いプロダクトの相関実験





