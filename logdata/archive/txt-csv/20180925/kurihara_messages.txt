-----明日雪がやばそうです <http://www.jma.go.jp/jp/warn/1410000.html>
-----昆布なさそうなのでお願いします
-----<@U105P17QT> ポン酢がほしいらしいです
-----アリスとボブの後はチャーリーもしくはキャロルらしいですね <https://ja.wikipedia.org/wiki/%E3%82%A2%E3%83%AA%E3%82%B9%E3%81%A8%E3%83%9C%E3%83%96>
-----調子が悪いっていうのはどういう？
-----残留届けって出しましたか？
-----後、扉の開け閉めは静かにおねがいします。
-----（告知が遅くて申し訳ないのですが）諸事情により残留届けを出しそこねているので今日までは22時までに帰宅するようone以外します。明日から残留届けの提出を再開します。
-----提案方式のスコアリングを元に関連ソースコード上位20件の選択を行い，適合率・再現率・F値の計算を行いました．実験の考察は後日やります．
-----作業途中報告
推薦精度を図るために適合率・再現率を利用したF値を取るためのコード書いています
-----はじめにを書きました
-----
-----node.jsのドキュメントを読み込んで，ドキュメントの説明文と 併記されているサンプルコードは記号等を取り除き， 全てword2vecに投げるようにしました． サンプルコード自体は別途保存し， 学習データにヒントを与えると類語を拾い出してくれるので，上位10件のキーワードを元にソースコード検索を行い， キーワードに引っかかったものは重みを加算していき，引っかかったソースコード全部をソートして，スニペットの推薦を行うことができました．精度はあんまり良くないです．
-----現状ではscoreを算出しているだけなので，推薦をする際はそれまでのコードをコンテキストを引数にして推薦をするようにしたいと考えています．
-----score自体の算出はまだやっていません．diffは現在時刻とファイル更新日時とのミリ秒をとっただけです．
-----
-----
-----・構文解析で識別子レベルに分解し，識別子がWordNetに掲載しているかどうかでスコアを算出するためのパラメータを算出するコードを書きました
-----・集めたソースコードの構文解析をして関数を抽出するコードを書きました
-----ずっと前から指摘されていると思いますが、sourceがtwittbotのものはbotなので適宜排除したほうがよろしいかと
